[{"categories":null,"contents":"‡¶è‡¶á ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡¶ü‡¶ø ‡¶è‡¶á ‡¶¨‡¶ø‡¶∑‡ßü‡¶ó‡ßÅ‡¶≤‡ßã ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡ßá ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡¶É\n‡¶è‡¶ï‡¶ú‡¶® ‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶≤‡ßá‡¶ñ‡¶ï‡•§ ‡¶∏‡ßÇ‡¶ö‡ßÄ‡¶™‡¶§‡ßç‡¶∞‡•§ Markdown ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶®‡ßç‡¶ü ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞‡¶ø‡¶Ç‡•§ ‡¶ó‡¶£‡¶ø‡¶§ ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞‡¶ø‡¶Ç‡•§ ‡¶á‡¶Æ‡ßã‡¶ú‡¶ø ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞‡¶ø‡¶Ç‡•§ Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;‚Äî\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n‚Äî Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Inline¬†Markdown¬†In¬†Table italics bold strikethrough¬†code Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements ‚Äî abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nMath Rendering Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\nEmoji Rendering üôà üôà üôâ üôâ üôä üôä\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"June 8, 2020","hero":"/posts/markdown-sample/hero.svg","permalink":"https://www.mjh3.com/posts/markdown-sample/","summary":"‡¶è‡¶á ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡¶ü‡¶ø ‡¶è‡¶á ‡¶¨‡¶ø‡¶∑‡ßü‡¶ó‡ßÅ‡¶≤‡ßã ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡ßá ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡¶É\n‡¶è‡¶ï‡¶ú‡¶® ‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶≤‡ßá‡¶ñ‡¶ï‡•§ ‡¶∏‡ßÇ‡¶ö‡ßÄ‡¶™‡¶§‡ßç‡¶∞‡•§ Markdown ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶®‡ßç‡¶ü ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞‡¶ø‡¶Ç‡•§ ‡¶ó‡¶£‡¶ø‡¶§ ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞‡¶ø‡¶Ç‡•§ ‡¶á‡¶Æ‡ßã‡¶ú‡¶ø ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞‡¶ø‡¶Ç‡•§ Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;‚Äî\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur?","tags":null,"title":"Markdown ‡¶è‡¶∞ ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ"},{"categories":null,"contents":"","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"https://www.mjh3.com/posts/category/sub-category/_index.bn/","summary":"","tags":null,"title":"Sub-Category"},{"categories":null,"contents":"","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"https://www.mjh3.com/posts/category/_index.bn/","summary":"","tags":null,"title":"Top Category Sample"},{"categories":null,"contents":"","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"https://www.mjh3.com/posts/_index.bn/","summary":"","tags":null,"title":"‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶∏‡¶Æ‡ßÇ‡¶π"},{"categories":["‡¶¨‡ßá‡¶∏‡¶ø‡¶ï"],"contents":"‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ! ‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶≠‡ßÇ‡¶Æ‡¶ø‡¶ï‡¶æ ‡¶∏‡ßÇ‡¶ö‡¶ï ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡•§ ‡¶è‡¶á ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡¶ü‡¶ø ‡¶è‡¶á ‡¶¨‡¶ø‡¶∑‡ßü‡¶ó‡ßÅ‡¶≤‡ßã ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡ßá ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡¶É\n‡¶π‡ßá‡¶∞‡ßã ‡¶õ‡¶¨‡¶ø‡¶ü‡¶ø ‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶è‡¶ï‡¶á ‡¶™‡¶•‡ßá ‡¶Ü‡¶õ‡ßá‡•§ ‡¶è‡¶á ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡¶ü‡¶ø ‡¶∏‡¶æ‡¶á‡¶°‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∏‡¶¨‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶•‡¶æ‡¶ï‡¶æ ‡¶â‡¶ö‡¶ø‡¶§‡•§ ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡ßá‡¶∞ ‡¶≤‡ßá‡¶ñ‡¶ï author.yaml ‡¶´‡¶æ‡¶á‡¶≤ ‡¶è ‡¶Ø‡¶æ‡¶ï‡ßá ‡¶â‡¶≤‡ßç‡¶≤‡ßá‡¶ñ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶§‡¶ø‡¶®‡¶ø‡¶á ‡¶•‡¶æ‡¶ï‡¶¨‡ßá‡¶®‡•§ ","date":"June 8, 2020","hero":"/posts/introduction/hero.svg","permalink":"https://www.mjh3.com/posts/introduction/","summary":"‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ! ‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶≠‡ßÇ‡¶Æ‡¶ø‡¶ï‡¶æ ‡¶∏‡ßÇ‡¶ö‡¶ï ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡•§ ‡¶è‡¶á ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡¶ü‡¶ø ‡¶è‡¶á ‡¶¨‡¶ø‡¶∑‡ßü‡¶ó‡ßÅ‡¶≤‡ßã ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡ßá ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡¶É\n‡¶π‡ßá‡¶∞‡ßã ‡¶õ‡¶¨‡¶ø‡¶ü‡¶ø ‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶è‡¶ï‡¶á ‡¶™‡¶•‡ßá ‡¶Ü‡¶õ‡ßá‡•§ ‡¶è‡¶á ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡¶ü‡¶ø ‡¶∏‡¶æ‡¶á‡¶°‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∏‡¶¨‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶•‡¶æ‡¶ï‡¶æ ‡¶â‡¶ö‡¶ø‡¶§‡•§ ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡ßá‡¶∞ ‡¶≤‡ßá‡¶ñ‡¶ï author.yaml ‡¶´‡¶æ‡¶á‡¶≤ ‡¶è ‡¶Ø‡¶æ‡¶ï‡ßá ‡¶â‡¶≤‡ßç‡¶≤‡ßá‡¶ñ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶§‡¶ø‡¶®‡¶ø‡¶á ‡¶•‡¶æ‡¶ï‡¶¨‡ßá‡¶®‡•§ ","tags":["‡¶¨‡ßá‡¶∏‡¶ø‡¶ï","‡¶¨‡¶π‡ßÅ‡¶≠‡¶æ‡¶∑‡¶ø‡¶ï"],"title":"‡¶≠‡ßÇ‡¶Æ‡¶ø‡¶ï‡¶æ"},{"categories":null,"contents":"‡¶è‡¶á ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡¶ü‡¶ø ‡¶è‡¶á ‡¶¨‡¶ø‡¶∑‡ßü‡¶ó‡ßÅ‡¶≤‡ßã ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡ßá ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡¶É\n‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶π‡¶ø‡¶∞‡ßã ‡¶á‡¶Æ‡ßá‡¶ú‡•§ ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶∂‡¶∞‡ßç‡¶ü‡¶ï‡ßã‡¶°‡•§ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü ‡¶è‡¶á ‡¶•‡¶ø‡¶Æ‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶á ‡¶∏‡¶ï‡¶≤ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü ‡¶∞‡ßü‡ßá‡¶õ‡ßá‡¶É\n‡¶è‡¶ü‡¶æ type=\u0026quot;success\u0026quot; ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‡•§ ‡¶è‡¶ü‡¶æ type=\u0026quot;danger\u0026quot; ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‡•§ ‡¶è‡¶ü‡¶æ type=\u0026quot;warning\u0026quot; ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‡•§ ‡¶è‡¶ü‡¶æ type=\u0026quot;info\u0026quot; ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‡•§ ‡¶è‡¶ü‡¶æ type=\u0026quot;dark\u0026quot; ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‡•§ ‡¶è‡¶ü‡¶æ type=\u0026quot;primary\u0026quot; ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‡•§ ‡¶è‡¶ü‡¶æ type=\u0026quot;secondary\u0026quot; ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‡•§ ‡¶õ‡¶¨‡¶ø ‡¶ï‡ßã‡¶® ‡¶ß‡¶∞‡¶®‡ßá‡¶∞ attribute ‡¶õ‡¶æ‡ßú‡¶æ ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ‡•§ height ‡¶è‡¶¨‡¶Ç width attribute ‡¶∏‡¶π ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ‡•§ height ‡¶è‡¶¨‡¶Ç width attribute ‡¶∏‡¶π ‡¶Æ‡¶æ‡¶ù‡¶ñ‡¶æ‡¶®‡ßá ‡¶∏‡ßç‡¶§‡¶æ‡¶™‡¶ø‡¶§ ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ‡•§ float attribute ‡¶∏‡¶π ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ‡•§ Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Praesent tellus risus, eleifend vel efficitur ac, venenatis sit amet sem. Ut ut egestas erat. Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Suspendisse nec ipsum eu erat finibus dictum. Morbi volutpat nulla purus, vel maximus ex molestie id. Nullam posuere est urna, at fringilla eros venenatis quis.\nFusce vulputate dolor augue, ut porta sapien fringilla nec. Vivamus commodo erat felis, a sodales lectus finibus nec. In a pulvinar orci. Maecenas suscipit eget lorem non pretium. Nulla aliquam a augue nec blandit. Curabitur ac urna iaculis, ornare ligula nec, placerat nulla. Maecenas aliquam nisi vitae tempus vulputate.\n‡¶¨‡¶ø‡¶≠‡¶æ‡¶ú‡¶® ‡¶è‡¶á ‡¶•‡¶ø‡¶Æ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßá‡¶á‡¶ú‡¶ï‡ßá ‡¶Ø‡¶§ ‡¶ñ‡ßÅ‡¶∂‡¶ø ‡¶≠‡¶æ‡¶ó‡ßá ‡¶≠‡¶æ‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶∏‡¶Æ‡¶∞‡ßç‡¶•‡¶® ‡¶ï‡¶∞‡ßá‡•§\n‡¶¶‡ßÅ‡¶á ‡¶ï‡¶≤‡¶æ‡¶Æ‡ßá ‡¶≠‡¶æ‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶¨‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶ï‡¶≤‡¶æ‡¶Æ Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. ‡¶°‡¶æ‡¶®‡ßá‡¶∞ ‡¶ï‡¶≤‡¶æ‡¶Æ Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. ‡¶§‡¶ø‡¶® ‡¶ï‡¶≤‡¶æ‡¶Æ‡ßá ‡¶≠‡¶æ‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶¨‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶ï‡¶≤‡¶æ‡¶Æ Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. ‡¶Æ‡¶æ‡¶ù‡ßá‡¶∞ ‡¶ï‡¶≤‡¶æ‡¶Æ Aenean dignissim dictum ex. Donec a nunc vel nibh placerat interdum. ‡¶°‡¶æ‡¶®‡ßá‡¶∞ ‡¶ï‡¶≤‡¶æ‡¶Æ Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. ‡¶â‡¶≤‡¶Æ‡ßç‡¶¨ ‡¶ú‡¶æ‡ßü‡¶ó‡¶æ ‡¶¶‡ßÅ‡¶á ‡¶≤‡¶æ‡¶á‡¶®‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ù‡ßá ‡¶â‡¶≤‡¶Æ‡ßç‡¶¨ ‡¶ú‡¶æ‡ßü‡¶ó‡¶æ ‡¶¶‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®‡•§\n‡¶è‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶≤‡¶æ‡¶á‡¶® ‡¶è‡¶ü‡¶ø ‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡ßü ‡¶≤‡¶æ‡¶á‡¶®‡•§ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶≤‡¶æ‡¶á‡¶®‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá 4rem ‡¶â‡¶≤‡¶Æ‡ßç‡¶¨‡¶≠‡¶æ‡¶¨‡ßá ‡¶¨‡¶æ‡¶¨‡ßç‡¶Ø‡¶ß‡¶æ‡¶® ‡¶•‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶ï‡¶•‡¶æ‡•§\n","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"https://www.mjh3.com/posts/shortcodes/","summary":"‡¶è‡¶á ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡¶ü‡¶ø ‡¶è‡¶á ‡¶¨‡¶ø‡¶∑‡ßü‡¶ó‡ßÅ‡¶≤‡ßã ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡ßá ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡¶É\n‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶π‡¶ø‡¶∞‡ßã ‡¶á‡¶Æ‡ßá‡¶ú‡•§ ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶∂‡¶∞‡ßç‡¶ü‡¶ï‡ßã‡¶°‡•§ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü ‡¶è‡¶á ‡¶•‡¶ø‡¶Æ‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶á ‡¶∏‡¶ï‡¶≤ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü ‡¶∞‡ßü‡ßá‡¶õ‡ßá‡¶É\n‡¶è‡¶ü‡¶æ type=\u0026quot;success\u0026quot; ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‡•§ ‡¶è‡¶ü‡¶æ type=\u0026quot;danger\u0026quot; ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‡•§ ‡¶è‡¶ü‡¶æ type=\u0026quot;warning\u0026quot; ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‡•§ ‡¶è‡¶ü‡¶æ type=\u0026quot;info\u0026quot; ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‡•§ ‡¶è‡¶ü‡¶æ type=\u0026quot;dark\u0026quot; ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‡•§ ‡¶è‡¶ü‡¶æ type=\u0026quot;primary\u0026quot; ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‡•§ ‡¶è‡¶ü‡¶æ type=\u0026quot;secondary\u0026quot; ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‡•§ ‡¶õ‡¶¨‡¶ø ‡¶ï‡ßã‡¶® ‡¶ß‡¶∞‡¶®‡ßá‡¶∞ attribute ‡¶õ‡¶æ‡ßú‡¶æ ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ‡•§ height ‡¶è‡¶¨‡¶Ç width attribute ‡¶∏‡¶π ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ‡•§ height ‡¶è‡¶¨‡¶Ç width attribute ‡¶∏‡¶π ‡¶Æ‡¶æ‡¶ù‡¶ñ‡¶æ‡¶®‡ßá ‡¶∏‡ßç‡¶§‡¶æ‡¶™‡¶ø‡¶§ ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ‡•§ float attribute ‡¶∏‡¶π ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ‡•§ Lorem ipsum dolor sit amet, consectetur adipiscing elit.","tags":null,"title":"‡¶∂‡¶∞‡ßç‡¶ü‡¶ï‡ßã‡¶°‡ßá‡¶∞  ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ"},{"categories":["‡¶¨‡ßá‡¶∏‡¶ø‡¶ï"],"contents":"‡¶è‡¶á ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡¶ü‡¶ø ‡¶è‡¶á ‡¶¨‡¶ø‡¶∑‡ßü‡¶ó‡ßÅ‡¶≤‡ßã ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡ßá ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡¶É\n‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó, ‡¶â‡¶™-‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó‡ßá ‡¶∏‡¶æ‡¶á‡¶°‡¶¨‡¶æ‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞ ‡¶Ü‡¶∞‡ßá‡¶ï‡¶ü‡¶ø ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶Ü‡¶õ‡ßá ‡¶∏‡ßá‡¶ü‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡•§ ‡¶π‡ßá‡¶∞‡ßã ‡¶õ‡¶¨‡¶ø‡¶ü‡¶ø ‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶Ø‡ßá ‡¶™‡¶•‡ßá ‡¶Ü‡¶õ‡ßá ‡¶∏‡ßá ‡¶™‡¶•‡ßá images ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞ ‡¶è ‡¶•‡¶æ‡¶ï‡¶¨‡ßá‡•§ ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶Æ‡¶ø‡¶°‡¶ø‡ßü‡¶æ ‡¶Ø‡ßá‡¶Æ‡¶® ‡¶õ‡¶¨‡¶ø, ‡¶ü‡ßÅ‡¶á‡¶ü, ‡¶á‡¶â‡¶ü‡¶ø‡¶â‡¶¨ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì, ‡¶≠‡ßÄ‡¶Æ‡ßá‡¶ì ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞‡¶ø‡¶Ç‡•§ ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶ü‡ßÅ‡¶á‡¶ü‡ßá‡¶∞ ‡¶®‡ßÅ‡¶Æ‡ßÅ‡¶®‡¶æ Owl bet you\u0026#39;ll lose this staring contest ü¶â pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 ‡¶á‡¶â‡¶ü‡¶ø‡¶ì‡¶¨‡ßá‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶≠‡ßÄ‡¶Æ‡ßá‡¶ì ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"https://www.mjh3.com/posts/category/sub-category/rich-content/","summary":"‡¶è‡¶á ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶™‡ßã‡¶∏‡ßç‡¶ü‡¶ü‡¶ø ‡¶è‡¶á ‡¶¨‡¶ø‡¶∑‡ßü‡¶ó‡ßÅ‡¶≤‡ßã ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡ßá ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡¶É\n‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó, ‡¶â‡¶™-‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó‡ßá ‡¶∏‡¶æ‡¶á‡¶°‡¶¨‡¶æ‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞ ‡¶Ü‡¶∞‡ßá‡¶ï‡¶ü‡¶ø ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶Ü‡¶õ‡ßá ‡¶∏‡ßá‡¶ü‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡•§ ‡¶π‡ßá‡¶∞‡ßã ‡¶õ‡¶¨‡¶ø‡¶ü‡¶ø ‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶Ø‡ßá ‡¶™‡¶•‡ßá ‡¶Ü‡¶õ‡ßá ‡¶∏‡ßá ‡¶™‡¶•‡ßá images ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞ ‡¶è ‡¶•‡¶æ‡¶ï‡¶¨‡ßá‡•§ ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶Æ‡¶ø‡¶°‡¶ø‡ßü‡¶æ ‡¶Ø‡ßá‡¶Æ‡¶® ‡¶õ‡¶¨‡¶ø, ‡¶ü‡ßÅ‡¶á‡¶ü, ‡¶á‡¶â‡¶ü‡¶ø‡¶â‡¶¨ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì, ‡¶≠‡ßÄ‡¶Æ‡ßá‡¶ì ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞‡¶ø‡¶Ç‡•§ ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶ü‡ßÅ‡¶á‡¶ü‡ßá‡¶∞ ‡¶®‡ßÅ‡¶Æ‡ßÅ‡¶®‡¶æ Owl bet you\u0026#39;ll lose this staring contest ü¶â pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 ‡¶á‡¶â‡¶ü‡¶ø‡¶ì‡¶¨‡ßá‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ‡¶≠‡ßÄ‡¶Æ‡ßá‡¶ì ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶®‡¶Æ‡ßÅ‡¶®‡¶æ ","tags":["‡¶Æ‡¶æ‡¶∞‡ßç‡¶ï‡¶°‡¶æ‡¶â‡¶®","‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶®‡ßç‡¶ü ‡¶∏‡¶æ‡¶ú‡¶æ‡¶®‡ßã","‡¶¨‡¶π‡ßÅ‡¶≠‡¶æ‡¶∑‡¶ø‡¶ï"],"title":"‡¶∏‡¶Æ‡ßÉ‡¶¶‡ßç‡¶ß ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶®‡ßç‡¶ü"},{"categories":null,"contents":"https://detective.kusto.io/inbox\nSeason 2 - Case 2 - Catch the Phishermen! // Training //Get the schema, know what we are working with PhoneCalls | getschema //see how big a data set PhoneCalls | count //see some example data PhoneCalls | take 100 //parse \u0026#34;out\u0026#34; the json data using dotNotation so we can use it to filter PhoneCalls | where EventType == \u0026#39;Connect\u0026#39; | extend Origin=tostring(Properties.Origin), Destination=tostring(Properties.Destination), Hidden=tobool(Properties.IsHidden) | take 10 //Test 1 using parsed json as filters PhoneCalls | where EventType == \u0026#39;Connect\u0026#39; | where tobool(Properties.IsHidden) == false or Properties !has \u0026#39;IsHidden\u0026#39; | summarize Count=count() by Phone=tostring(Properties.Origin) | top 1 by Count //Perform some statistics PhoneCalls | where EventType ==\u0026#39;Connect\u0026#39; | summarize calls=count() by bin(Timestamp, 1h) | summarize avg(calls), percentile(calls, 50) //Use join PhoneCalls | where EventType == \u0026#39;Connect\u0026#39; | where Properties.Destination != \u0026#39;0\u0026#39; | join kind=inner (PhoneCalls | where EventType == \u0026#39;Disconnect\u0026#39; | extend DisconnectProperties = Properties) on CallConnectionId | where DisconnectProperties.DisconnectedBy == \u0026#39;Destination\u0026#39; | count //Solution PhoneCalls | where EventType == \u0026#39;Connect\u0026#39; | extend Origin=tostring(Properties.Origin), Destination=tostring(Properties.Destination) | where Properties has \u0026#39;IsHidden\u0026#39; | join kind=inner (PhoneCalls | where EventType == \u0026#39;Disconnect\u0026#39; | extend DisconnectedBy = tostring(Properties.DisconnectedBy) | where DisconnectedBy == \u0026#39;Destination\u0026#39;) on CallConnectionId | summarize PerpNumber = dcount(Destination) by Origin | top 1 by PerpNumber Season 2 - Case 1 - To bill or not to bill? //Case 1 training //can run sql directly SELECT SUM(Consumed * Cost) AS TotalCost FROM Costs JOIN Consumption ON Costs.MeterType = Consumption.MeterType //can use EXPLAIN to convert to KQL EXPLAIN SELECT SUM(Consumed * Cost) AS TotalCost FROM Costs JOIN Consumption ON Costs.MeterType = Consumption.MeterType //from EXPLAIN Costs | join kind=inner (Consumption | project-rename [\u0026#39;Consumption.MeterType\u0026#39;]=MeterType) on ([\u0026#39;$left\u0026#39;].MeterType == [\u0026#39;$right\u0026#39;].[\u0026#39;Consumption.MeterType\u0026#39;]) | summarize TotalCost=sum(__sql_multiply(Consumed, Cost)) | project TotalCost //cleaned up a bit USES LOOKUP Consumption | summarize TotalConsumed = sum(Consumed) by MeterType | lookup Costs on MeterType | extend TotalCost = TotalConsumed*Cost | summarize sum(TotalCost) // who used the most water Consumption | where MeterType == \u0026#34;Water\u0026#34; |summarize WaterWaster=sum(Consumed) by HouseholdId |top 10 by WaterWaster //who used the most electricity Consumption | where MeterType == \u0026#34;Electricity\u0026#34; | summarize ElectricityWaster=sum(Consumed) by HouseholdId | top 10 by ElectricityWaster //Water consumption by date Timestamp Consumption | where MeterType == \u0026#34;Water\u0026#34; | summarize WaterWaster=sum(Consumed) by bin(Timestamp, 1d) | render timechart //Electricity by date Consumption | where MeterType == \u0026#34;Electricity\u0026#34; | summarize Elec_Waster=sum(Consumed) by bin(Timestamp, 1d) | render timechart //Elec stats like min max count and avg Consumption | where MeterType ==\u0026#34;Electricity\u0026#34; | summarize Total_Count=count(), Lowest_Value=min(Consumed), Highest_Value=max(Consumed), Average_Value=avg(Consumed) //Case 1 - Solved Consumption | summarize hint.strategy=shuffle arg_max(Consumed, *) by HouseholdId, MeterType, Timestamp | join kind=inner ( Costs | project MeterType, Cost ) on MeterType | extend BillAmount = Consumed * Cost | summarize TotalBillsAmount = sum(BillAmount) //using lookup function Consumption | summarize hint.strategy=shuffle arg_max(Consumed, *) by HouseholdId, MeterType, Timestamp | lookup Costs on MeterType | summarize sum(Consumed * Cost) //Even cleaner using the DISTINCT function Consumption | distinct Consumed, HouseholdId, MeterType, Timestamp | lookup Costs on MeterType | summarize round(sum(Consumed * Cost),2) Kusto Detective KQL Challenge Information ## Welcome to the Kusto Detective Agency - Season 2! Here you can find my solutions for Season 2. Feel free to reach out if you have any questions. Season 2 - Case 0 - Onboarding //Case 0 training DetectiveCases | where EventType == \u0026#39;CaseOpened\u0026#39; | extend Bounty = toreal(Properties.Bounty) | count DetectiveCases | where EventType == \u0026#39;CaseSolved\u0026#39; | summarize CasesSolved=count() by DetectiveId //| count | top 10 by CasesSolved DetectiveCases | where EventType == \u0026#39;CaseOpened\u0026#39; | project CaseOpened = Timestamp, CaseId | join kind=inner ( DetectiveCases | where EventType == \u0026#39;CaseAssigned\u0026#39; | summarize FirstAssigned=min(Timestamp) by CaseId) on CaseId | summarize Average=avg(FirstAssigned - CaseOpened) DetectiveCases | where EventType == \u0026#39;CaseOpened\u0026#39; | project CaseOpened = Timestamp, CaseId | join kind=inner ( DetectiveCases | where EventType == \u0026#39;CaseSolved\u0026#39; | summarize CaseSolved=min(Timestamp) by CaseId) on CaseId | summarize Average=avg(CaseSolved - CaseOpened) DetectiveCases | where EventType == \u0026#39;CaseOpened\u0026#39; | project CaseOpened=Timestamp, CaseId | join kind=inner ( DetectiveCases | where EventType == \u0026#39;CaseSolved\u0026#39; | summarize CaseSolved=min(Timestamp) by CaseId ) on CaseId | summarize avg(CaseSolved - CaseOpened) //Case 0 Solved DetectiveCases | where Timestamp \u0026gt;= datetime(2022-01-01) and Timestamp \u0026lt; datetime(2023-01-01) | where EventType == \u0026#34;CaseOpened\u0026#34; and isnotnull(Properties.Bounty) and isnotnull(CaseId) | project CaseId, Bounty = todouble(parse_json(Properties).Bounty) | join kind=inner ( DetectiveCases | where EventType == \u0026#34;CaseAssigned\u0026#34; and isnotnull(DetectiveId) and isnotnull(CaseId) | project CaseId, DetectiveId ) on CaseId | summarize TotalEarnings = sum(Bounty) by DetectiveId | top 10 by TotalEarnings desc Season 2 - Case 3 - Return Stolen Cars! // Records count CarsTraffic | count // See some examples CarsTraffic | take 100 // Records count StolenCars | count //See some examples StolenCars | take 100 // find all rows that have one of a list of VIN numbers CarsTraffic | where VIN in (\u0026#39;FD655964S\u0026#39;, \u0026#39;JO132865F\u0026#39;, \u0026#39;AD701526K\u0026#39;) | count //the stolen car with the most sightings CarsTraffic | where VIN in (StolenCars) | summarize Sightings=count() by VIN | top 1 by Sightings //which were the first and last cars to be spotted at a certain intersection CarsTraffic | where Street == 180 and Ave == 121 | summarize First=arg_min(Timestamp, VIN), Last=arg_max(Timestamp, VIN) //the street and avenue was stolen car with VIN number IR177866Y first sighted CarsTraffic | where VIN == \u0026#39;IR177866Y\u0026#39; | summarize First=arg_min(Timestamp, Street, Ave) //find all cars that were on the same street at a certain time in both the morning and evening of June 14 CarsTraffic | where Timestamp between (datetime(2023-06-14 08:00) .. 1h) | join kind = inner ( CarsTraffic | where Timestamp between (datetime(2023-06-14 20:00) .. 1h) ) on VIN, Street, Ave | summarize dcount(VIN) //cars have been at Street 228, Ave 145 but have never been sighted at location Street 121, Ave 180 CarsTraffic | where Street == 228 and Ave == 145 | join kind=leftanti ( CarsTraffic | where Street == 121 and Ave == 180 | distinct VIN) on VIN | distinct VIN | count //create the joined data to find the stash house for the stolen cars //last seen location for stolen cars let VinsbyLocation = StolenCars | join kind=inner (CarsTraffic) on $left.VIN == $right.VIN | summarize arg_max(Timestamp, Ave, Street) by VIN | extend TimeKey = bin(Timestamp, 15m) | project TimeKey, Ave, Street; //all VIN at the same location within 15 time window let VinsbyTime = VinsbyLocation | join kind=inner ( CarsTraffic | extend TimeKey = bin(Timestamp, 15m)) on TimeKey, Ave, Street | summarize by VIN; //last sighting for each vin and most visited. The top two are where the plates were swapped //the next is the stash spot VinsbyTime | join kind=inner ( CarsTraffic | summarize arg_max(Timestamp, Ave, Street) by VIN ) on VIN | summarize count() by Ave, Street | order by count_ desc Season 2 - Case 4 - Triple trouble! // Triple trouble NetworkMetrics | getschema NetworkMetrics //| count | take 10 IpInfo | getschema IpInfo //| count | take 10 //bin function to create buckets of time NetworkMetrics | summarize count() by bin(Timestamp, 1d) | render timechart // You can use time-chart to look on the data NetworkMetrics | summarize avg(BytesSent) by bin(Timestamp, 1d) | render timechart // .. or you can use query to calculate it NetworkMetrics | summarize avg(BytesSent) by bin(Timestamp, 1d) | top 1 by avg_BytesSent asc NetworkMetrics | take 10 | evaluate ipv4_lookup(IpInfo, ClientIP, IpCidr) //Which company most frequently contacted IP address 178.248.55.129 NetworkMetrics | where TargetIP == \u0026#39;178.248.55.129\u0026#39; | evaluate ipv4_lookup(IpInfo, ClientIP, IpCidr) | summarize Count=count() by Info | order by Count //The following query creates two series (as two columns): one with the number of records per day and the other with the average amount of data received per day. NetworkMetrics | make-series count(), avg(BytesReceived) on Timestamp step 1d | render timechart with (ysplit=panels) //I suspect that someone has hacked into the Digitown municipality system and stolen these documents. // Our system is a known data hub and hosts various information about the town itself, real-time monitoring // systems of the city, tax payments, etc. // It serves as a real-time data provider to many organizations around the world, so it receives a lot of traffic. // Unfortunately, I dont have much data to give you. // All I have is a 30day traffic statistics report captured by the Digitown municipality system network routers let sus = NetworkMetrics | summarize dcount(TargetIP) by ClientIP | where dcount_TargetIP == 1 | distinct ClientIP | evaluate ipv4_lookup(IpInfo, ClientIP, IpCidr) | project ClientIP, Info; NetworkMetrics | lookup kind=inner sus on ClientIP | make-series BytesSent=sum(BytesSent) on Timestamp step 1d by Info | extend (flag, score, baseline) = series_decompose_anomalies(BytesSent) | extend top_sus = toreal(series_stats_dynamic(score)[\u0026#39;max\u0026#39;]) | top 2 by top_sus ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://www.mjh3.com/notes/kql/","summary":"https://detective.kusto.io/inbox\nSeason 2 - Case 2 - Catch the Phishermen! // Training //Get the schema, know what we are working with PhoneCalls | getschema //see how big a data set PhoneCalls | count //see some example data PhoneCalls | take 100 //parse \u0026#34;out\u0026#34; the json data using dotNotation so we can use it to filter PhoneCalls | where EventType == \u0026#39;Connect\u0026#39; | extend Origin=tostring(Properties.Origin), Destination=tostring(Properties.Destination), Hidden=tobool(Properties.IsHidden) | take 10 //Test 1 using parsed json as filters PhoneCalls | where EventType == \u0026#39;Connect\u0026#39; | where tobool(Properties.","tags":null,"title":"KQL Notes"}]