[{"categories":["Basic"],"contents":"Greeting! This is an introduction post. This post tests the followings:\nHero image is in the same directory as the post. This post should be at top of the sidebar. Post author should be the same as specified in author.yaml file. ","date":"June 8, 2020","hero":"/posts/introduction/hero.svg","permalink":"https://www.mjh3.com/posts/introduction/","summary":"Greeting! This is an introduction post. This post tests the followings:\nHero image is in the same directory as the post. This post should be at top of the sidebar. Post author should be the same as specified in author.yaml file. ","tags":["Basic","Multi-lingual"],"title":"Introduction"},{"categories":null,"contents":"This is a sample post intended to test the followings:\nA different post author. Table of contents. Markdown content rendering. Math rendering. Emoji rendering. Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;â€”\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\nâ€” Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables InlineÂ MarkdownÂ InÂ Table italics bold strikethroughÂ code Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements â€” abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nMath Rendering Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\nEmoji Rendering ðŸ™ˆ ðŸ™ˆ ðŸ™‰ ðŸ™‰ ðŸ™Š ðŸ™Š\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"June 8, 2020","hero":"/posts/markdown-sample/hero.svg","permalink":"https://www.mjh3.com/posts/markdown-sample/","summary":"This is a sample post intended to test the followings:\nA different post author. Table of contents. Markdown content rendering. Math rendering. Emoji rendering. Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;â€”\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur?","tags":null,"title":"Markdown Samples"},{"categories":["Basic"],"contents":"This sample post tests the followings:\nCategory, sub-category nesting in the sidebar. Hero image and other images are in images folder inside this post directory. Different media rendering like image, tweet, YouTube video, Vimeo video etc. Image Sample Tweet Sample Owl bet you\u0026#39;ll lose this staring contest ðŸ¦‰ pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 YouTube Video Sample Vimeo Video Sample Using Microsoft Sentinel Microsoft Sentinel is a cloud-native security information and event management (SIEM) system that provides intelligent security analytics and threat intelligence. It is designed to help organizations to detect and respond to security threats in real-time.\nKey Features of Microsoft Sentinel Microsoft Sentinel provides a range of features that help to detect and respond to security threats:\nLog Collection: Microsoft Sentinel can collect logs from a wide range of sources including cloud services, on-premises servers, and security devices. This allows organizations to centralize their security logs in a single location for easier analysis.\nThreat Intelligence: Microsoft Sentinel uses threat intelligence to identify potential security threats. It collects information from various sources such as the Microsoft Intelligent Security Graph, and other security feeds.\nSecurity Analytics: Microsoft Sentinel uses machine learning algorithms to analyze security logs and identify potential threats. This allows organizations to detect threats in real-time and respond quickly.\nAutomated Response: Microsoft Sentinel allows organizations to automate their response to security threats. It can perform actions such as quarantining an infected machine, blocking a suspicious IP address, or disabling a user account.\nGetting Started with Microsoft Sentinel To get started with Microsoft Sentinel, you will need to follow these steps:\nSign up for Azure: You will need to have an Azure account to use Microsoft Sentinel. If you do not have an Azure account, you can sign up for a free trial.\nCreate a Microsoft Sentinel Workspace: Once you have an Azure account, you can create a Microsoft Sentinel Workspace. This will be the central location for all your security logs.\nConnect Data Sources: After creating the workspace, you will need to connect your data sources to Microsoft Sentinel. This can be done using the built-in connectors or by creating custom connectors.\nSet up Analytics Rules: Microsoft Sentinel uses analytics rules to identify potential security threats. You will need to set up these rules to start detecting threats.\nCreate Playbooks: Microsoft Sentinel allows you to create automated response actions using playbooks. You can create custom playbooks or use the built-in templates.\nConclusion Microsoft Sentinel is a powerful tool for detecting and responding to security threats. It provides a range of features that help organizations to centralize their security logs, detect threats in real-time, and automate their response to security incidents. By following the steps outlined above, you can get started with Microsoft Sentinel and improve your organization\u0026rsquo;s security posture.\nQuiz What is Microsoft Sentinel? A. A cloud-native security information and event management system. B. A database management system. C. A cloud-based email service. D. A social media platform.\nWhat does Microsoft Sentinel use to identify potential security threats? A. Threat intelligence. B. Financial data. C. Marketing analytics. D. Product reviews.\nWhat is the central location for all security logs in Microsoft Sentinel? A. Workspace. B. Server. C. Database. D. Folder.\nHow can organizations automate their response to security threats in Microsoft Sentinel? A. By creating custom connectors. B. By setting up analytics rules. C. By using the built-in templates. D. By creating playbooks.\nWhat is the benefit of using Microsoft Sentinel? A. It allows organizations to centralize their security logs. B. It helps organizations to detect and respond to security threats in real-time. C. It can perform automated response actions. D. All of the above.\nAnswers: 1A, 2A, 3A, 4D, 5D.\n","date":"June 8, 2020","hero":"/posts/category/sub-category/rich-content/images/forest.jpg","permalink":"https://www.mjh3.com/posts/category/sub-category/rich-content/","summary":"This sample post tests the followings:\nCategory, sub-category nesting in the sidebar. Hero image and other images are in images folder inside this post directory. Different media rendering like image, tweet, YouTube video, Vimeo video etc. Image Sample Tweet Sample Owl bet you\u0026#39;ll lose this staring contest ðŸ¦‰ pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 YouTube Video Sample Vimeo Video Sample Using Microsoft Sentinel Microsoft Sentinel is a cloud-native security information and event management (SIEM) system that provides intelligent security analytics and threat intelligence.","tags":["Markdown","Content Organization","Multi-lingual"],"title":"Rich Content"},{"categories":null,"contents":"This is a sample post intended to test the followings:\nDefault hero image. Different shortcodes. Alert The following alerts are available in this theme.\nThis is sample alert with type=\u0026quot;success\u0026quot;. This is sample alert with type=\u0026quot;danger\u0026quot;. This is sample alert with type=\u0026quot;warning\u0026quot;. This is sample alert with type=\u0026quot;info\u0026quot;. This is sample alert with type=\u0026quot;dark\u0026quot;. This is sample alert with type=\u0026quot;primary\u0026quot;. This is sample alert with type=\u0026quot;secondary\u0026quot;. Image A sample image without any attribute. A sample image with height and width attributes. A center aligned image with height and width attributes. A image with float attribute. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Praesent tellus risus, eleifend vel efficitur ac, venenatis sit amet sem. Ut ut egestas erat. Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Suspendisse nec ipsum eu erat finibus dictum. Morbi volutpat nulla purus, vel maximus ex molestie id. Nullam posuere est urna, at fringilla eros venenatis quis.\nFusce vulputate dolor augue, ut porta sapien fringilla nec. Vivamus commodo erat felis, a sodales lectus finibus nec. In a pulvinar orci. Maecenas suscipit eget lorem non pretium. Nulla aliquam a augue nec blandit. Curabitur ac urna iaculis, ornare ligula nec, placerat nulla. Maecenas aliquam nisi vitae tempus vulputate.\nSplit This theme support splitting the page into as many columns as you wish.\nTwo column split Left Column Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Right Column Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Three column split Left Column Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Middle Column Aenean dignissim dictum ex. Donec a nunc vel nibh placerat interdum. Right Column Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Vertical Space Give vertical space between two lines.\nThis is line one. This is line two. It should have 4rem vertical space with previous line.\nVideo Video by Rahul Sharma from Pexels.\nMermaid Here, are few example of mermaid shortcode.\nGraph:\ngraph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] Sequence Diagram:\nsequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! Gantt diagram:\ngantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d Class Diagram:\nclassDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label Git Graph:\ngitGraph: options { \"nodeSpacing\": 150, \"nodeRadius\": 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch ER Diagram:\nerDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses Gist ","date":"June 8, 2020","hero":"/posts/shortcodes/boat.jpg","permalink":"https://www.mjh3.com/posts/shortcodes/","summary":"This is a sample post intended to test the followings:\nDefault hero image. Different shortcodes. Alert The following alerts are available in this theme.\nThis is sample alert with type=\u0026quot;success\u0026quot;. This is sample alert with type=\u0026quot;danger\u0026quot;. This is sample alert with type=\u0026quot;warning\u0026quot;. This is sample alert with type=\u0026quot;info\u0026quot;. This is sample alert with type=\u0026quot;dark\u0026quot;. This is sample alert with type=\u0026quot;primary\u0026quot;. This is sample alert with type=\u0026quot;secondary\u0026quot;. Image A sample image without any attribute.","tags":null,"title":"Shortcodes Samples"},{"categories":null,"contents":"KQL Notes https://detective.kusto.io/inbox\nSeason 2 - Case 0 - Onboarding //Case 0 training DetectiveCases | where EventType == \u0026#39;CaseOpened\u0026#39; | extend Bounty = toreal(Properties.Bounty) | count DetectiveCases | where EventType == \u0026#39;CaseSolved\u0026#39; | summarize CasesSolved=count() by DetectiveId //| count | top 10 by CasesSolved DetectiveCases | where EventType == \u0026#39;CaseOpened\u0026#39; | project CaseOpened = Timestamp, CaseId | join kind=inner ( DetectiveCases | where EventType == \u0026#39;CaseAssigned\u0026#39; | summarize FirstAssigned=min(Timestamp) by CaseId) on CaseId | summarize Average=avg(FirstAssigned - CaseOpened) DetectiveCases | where EventType == \u0026#39;CaseOpened\u0026#39; | project CaseOpened = Timestamp, CaseId | join kind=inner ( DetectiveCases | where EventType == \u0026#39;CaseSolved\u0026#39; | summarize CaseSolved=min(Timestamp) by CaseId) on CaseId | summarize Average=avg(CaseSolved - CaseOpened) DetectiveCases | where EventType == \u0026#39;CaseOpened\u0026#39; | project CaseOpened=Timestamp, CaseId | join kind=inner ( DetectiveCases | where EventType == \u0026#39;CaseSolved\u0026#39; | summarize CaseSolved=min(Timestamp) by CaseId ) on CaseId | summarize avg(CaseSolved - CaseOpened) //Case 0 Solved DetectiveCases | where Timestamp \u0026gt;= datetime(2022-01-01) and Timestamp \u0026lt; datetime(2023-01-01) | where EventType == \u0026#34;CaseOpened\u0026#34; and isnotnull(Properties.Bounty) and isnotnull(CaseId) | project CaseId, Bounty = todouble(parse_json(Properties).Bounty) | join kind=inner ( DetectiveCases | where EventType == \u0026#34;CaseAssigned\u0026#34; and isnotnull(DetectiveId) and isnotnull(CaseId) | project CaseId, DetectiveId ) on CaseId | summarize TotalEarnings = sum(Bounty) by DetectiveId | top 10 by TotalEarnings desc Season 2 - Case 1 - To bill or not to bill? //Case 1 training //can run sql directly SELECT SUM(Consumed * Cost) AS TotalCost FROM Costs JOIN Consumption ON Costs.MeterType = Consumption.MeterType //can use EXPLAIN to convert to KQL EXPLAIN SELECT SUM(Consumed * Cost) AS TotalCost FROM Costs JOIN Consumption ON Costs.MeterType = Consumption.MeterType //from EXPLAIN Costs | join kind=inner (Consumption | project-rename [\u0026#39;Consumption.MeterType\u0026#39;]=MeterType) on ([\u0026#39;$left\u0026#39;].MeterType == [\u0026#39;$right\u0026#39;].[\u0026#39;Consumption.MeterType\u0026#39;]) | summarize TotalCost=sum(__sql_multiply(Consumed, Cost)) | project TotalCost //cleaned up a bit USES LOOKUP Consumption | summarize TotalConsumed = sum(Consumed) by MeterType | lookup Costs on MeterType | extend TotalCost = TotalConsumed*Cost | summarize sum(TotalCost) // who used the most water Consumption | where MeterType == \u0026#34;Water\u0026#34; |summarize WaterWaster=sum(Consumed) by HouseholdId |top 10 by WaterWaster //who used the most electricity Consumption | where MeterType == \u0026#34;Electricity\u0026#34; | summarize ElectricityWaster=sum(Consumed) by HouseholdId | top 10 by ElectricityWaster //Water consumption by date Timestamp Consumption | where MeterType == \u0026#34;Water\u0026#34; | summarize WaterWaster=sum(Consumed) by bin(Timestamp, 1d) | render timechart //Electricity by date Consumption | where MeterType == \u0026#34;Electricity\u0026#34; | summarize Elec_Waster=sum(Consumed) by bin(Timestamp, 1d) | render timechart //Elec stats like min max count and avg Consumption | where MeterType ==\u0026#34;Electricity\u0026#34; | summarize Total_Count=count(), Lowest_Value=min(Consumed), Highest_Value=max(Consumed), Average_Value=avg(Consumed) //Case 1 - Solved Consumption | summarize hint.strategy=shuffle arg_max(Consumed, *) by HouseholdId, MeterType, Timestamp | join kind=inner ( Costs | project MeterType, Cost ) on MeterType | extend BillAmount = Consumed * Cost | summarize TotalBillsAmount = sum(BillAmount) //using lookup function Consumption | summarize hint.strategy=shuffle arg_max(Consumed, *) by HouseholdId, MeterType, Timestamp | lookup Costs on MeterType | summarize sum(Consumed * Cost) Kusto Detective KQL Challenge Information Welcome to the Kusto Detective Agency - Season 2! If you\u0026#39;ve been here before, congrats on leveling up! Click that log-in button to access your account. But if you\u0026#39;re new and don\u0026#39;t have a free Kusto cluster or KQL database, fear not! Follow the instructions in the FAQ section to create one and join the detective party. Your shiny new cluster will be your go-to investigative tool, and its URL will be your secret agent identity. If you have been here for Season 1, you may be surprised to find yourself as a Rookie again. You see, it\u0026#39;s all about innovation and hitting refresh. So, it\u0026#39;s a fresh start for everyone. Yet we believe in excellence and that\u0026#39;s why we need your detective skills to unveil the crÃ¨me de la crÃ¨me of detectives from the past year, 2022. This is like the ultimate leaderboard challenge where we crown the \u0026#34;Most Epic Detective of the Year.\u0026#34; Exciting, right? Imagine our agency as a buzzing beehive, like StackOverflow on steroids. We have a crazy number of cases popping up every day, each with a juicy bounty attached (yes, cold, hard cash!). And guess what? We\u0026#39;ve got thousands of Kusto Detectives scattered across the globe, all itching to pick a case and earn their detective stripes. But here\u0026#39;s the catch: only the first detective to crack the case gets the bounty and major street cred! So, your mission, should you choose to accept it, is to dig into the vast archives of our system operation logs from the legendary year 2022. You\u0026#39;re on a quest to unearth the absolute legend, the detective with the biggest impact on our businessâ€”the one who raked in the most moolah by claiming bounties like a boss! Feeling a bit rusty or want to level up your Kusto skills? No worries, my friend. We\u0026#39;ve got your back with the \u0026#34;Train Me\u0026#34; section. It\u0026#39;s like a power-up that\u0026#39;ll help you sharpen your Kusto-fu to tackle each case head-on. Oh, and if you stumble upon a mind-boggling case and need a little nudge, the \u0026#34;Hints\u0026#34; are there to save the day! Now, strap on your detective hat, embrace the thrill, and get ready to rock this investigation. The fate of the \u0026#34;Most Epic Detective of the Year\u0026#34; rests in your hands! Good luck, rookie, and remember to bring your sense of humor along for this wild ride! Lieutenant Laughter ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://www.mjh3.com/notes/kql/","summary":"KQL Notes https://detective.kusto.io/inbox\nSeason 2 - Case 0 - Onboarding //Case 0 training DetectiveCases | where EventType == \u0026#39;CaseOpened\u0026#39; | extend Bounty = toreal(Properties.Bounty) | count DetectiveCases | where EventType == \u0026#39;CaseSolved\u0026#39; | summarize CasesSolved=count() by DetectiveId //| count | top 10 by CasesSolved DetectiveCases | where EventType == \u0026#39;CaseOpened\u0026#39; | project CaseOpened = Timestamp, CaseId | join kind=inner ( DetectiveCases | where EventType == \u0026#39;CaseAssigned\u0026#39; | summarize FirstAssigned=min(Timestamp) by CaseId) on CaseId | summarize Average=avg(FirstAssigned - CaseOpened) DetectiveCases | where EventType == \u0026#39;CaseOpened\u0026#39; | project CaseOpened = Timestamp, CaseId | join kind=inner ( DetectiveCases | where EventType == \u0026#39;CaseSolved\u0026#39; | summarize CaseSolved=min(Timestamp) by CaseId) on CaseId | summarize Average=avg(CaseSolved - CaseOpened) DetectiveCases | where EventType == \u0026#39;CaseOpened\u0026#39; | project CaseOpened=Timestamp, CaseId | join kind=inner ( DetectiveCases | where EventType == \u0026#39;CaseSolved\u0026#39; | summarize CaseSolved=min(Timestamp) by CaseId ) on CaseId | summarize avg(CaseSolved - CaseOpened) //Case 0 Solved DetectiveCases | where Timestamp \u0026gt;= datetime(2022-01-01) and Timestamp \u0026lt; datetime(2023-01-01) | where EventType == \u0026#34;CaseOpened\u0026#34; and isnotnull(Properties.","tags":null,"title":"KQL Notes"}]